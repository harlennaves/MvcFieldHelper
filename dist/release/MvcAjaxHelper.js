var Mvc;Mvc||(Mvc={});var Mvc;!function(e){!function(e){e.Input="InputFieldReader",e.Kendo="KendoFieldReader",e.CheckBox="CheckBoxFieldReader"}(e.FieldReaderType||(e.FieldReaderType={}))}(Mvc||(Mvc={}));var Mvc;!function(e){var t=function(){return function(t){if(this.fieldId=t.fieldId,this.modelProperty=t.modelProperty,this.modelType=t.modelType,this.reader=t.reader,null==this.modelProperty)throw new Error("modelProperty cannot be null");null==this.fieldId&&(this.fieldId=this.modelProperty),null==this.modelType&&(this.modelType="string"),null==this.reader&&(this.reader=e.FieldReaderType.Input)}}();e.FieldMappingModel=t}(Mvc||(Mvc={}));var Mvc;!function(Mvc){var FieldHelper=function(){function FieldHelper(e,t){this.Model=t,null==this.Model&&(this.Model={}),this.mapping=e,this.readers={}}return FieldHelper.prototype.getFieldReader=function(type){return null==this.readers[type.toString()]&&(this.readers[type.toString()]=eval("new Mvc.Form."+type.toString()+"()")),this.readers[type.toString()]},FieldHelper.prototype.setModel=function(){for(var e=this.mapping.length,t=0;t<e;t++){var r=this.mapping[t];this.getFieldReader(r.reader).setModelValue(r,this.Model)}},FieldHelper.prototype.getModel=function(){for(var e=this.mapping.length,t=0;t<e;t++){var r=this.mapping[t];this.getFieldReader(r.reader).getModelValue(r,this.Model)}},FieldHelper.prototype.clearModel=function(){for(var e=this.mapping.length,t=0;t<e;t++){var r=this.mapping[t];this.Model[r.modelProperty]=""}this.getModel()},FieldHelper}();Mvc.FieldHelper=FieldHelper}(Mvc||(Mvc={}));var Mvc;!function(e){var t=function(){function e(){}return e.prototype.getModelValue=function(e,t){var r=$("#"+e.fieldId);null!=r&&null!=t[e.modelProperty]&&r.prop("checked",t[e.modelProperty])},e.prototype.setModelValue=function(e,t){var r=$("#"+e.fieldId);null!=r&&(t[e.modelProperty]=r.prop("checked"))},e}();e.CheckBoxFieldReader=t}(Mvc||(Mvc={}));var Mvc;!function(e){var t=function(){function e(){}return e.prototype.getModelValue=function(e,t){var r=$("#"+e.fieldId);null!=r&&null!=t[e.modelProperty]&&r.val(t[e.modelProperty])},e.prototype.setModelValue=function(e,t){var r=$("#"+e.fieldId);null!=r&&(t[e.modelProperty]=r.val())},e}();e.InputFieldReader=t}(Mvc||(Mvc={}));